{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowFailure",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Call3[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate3",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowFailure",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Call3Value[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate3Value",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "blockAndAggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBasefee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "basefee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainid",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockCoinbase",
      "outputs": [
        {
          "internalType": "address",
          "name": "coinbase",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "difficulty",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockGasLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gaslimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "getTokenBalances",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "requireSuccess",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "tryAggregate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "requireSuccess",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "tryBlockAndAggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall3.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610eb9806100206000396000f3fe6080604052600436106100fe5760003560e01c80634d2301cc11610095578063a8b0574e11610064578063a8b0574e1461023a578063bce38bd714610255578063c3077fa914610268578063d802178e1461027b578063ee82ac5e146102a857600080fd5b80634d2301cc146101d957806372425d9d1461020157806382ad56cb1461021457806386d516e81461022757600080fd5b80633408e470116100d15780633408e4701461017e578063399542e9146101915780633e64a696146101b357806342cbb15c146101c657600080fd5b80630f28c97d14610103578063174dea7114610125578063252dba421461014557806327e86d6e14610166575b600080fd5b34801561010f57600080fd5b50425b6040519081526020015b60405180910390f35b610138610133366004610ae6565b6102c7565b60405161011c9190610be3565b610158610153366004610ae6565b6104b5565b60405161011c929190610bfd565b34801561017257600080fd5b50436000190140610112565b34801561018a57600080fd5b5046610112565b6101a461019f366004610c67565b610629565b60405161011c93929190610cc1565b3480156101bf57600080fd5b5048610112565b3480156101d257600080fd5b5043610112565b3480156101e557600080fd5b506101126101f4366004610d05565b6001600160a01b03163190565b34801561020d57600080fd5b5044610112565b610138610222366004610ae6565b610644565b34801561023357600080fd5b5045610112565b34801561024657600080fd5b5060405141815260200161011c565b610138610263366004610c67565b6107c6565b6101a4610276366004610ae6565b610959565b34801561028757600080fd5b5061029b610296366004610d20565b610978565b60405161011c9190610d3e565b3480156102b457600080fd5b506101126102c3366004610d82565b4090565b60606000828067ffffffffffffffff8111156102e5576102e5610d9b565b60405190808252806020026020018201604052801561032b57816020015b6040805180820190915260008152606060208201528152602001906001900390816103035790505b5092503660005b8281101561045757600085828151811061034e5761034e610db1565b6020026020010151905087878381811061036a5761036a610db1565b905060200281019061037c9190610dc7565b6040810135958601959093506103956020850185610d05565b6001600160a01b0316816103ac6060870187610de7565b6040516103ba929190610e2e565b60006040518083038185875af1925050503d80600081146103f7576040519150601f19603f3d011682016040523d82523d6000602084013e6103fc565b606091505b50602080850191909152901515808452908501351761044d5762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260846000fd5b5050600101610332565b508234146104ac5760405162461bcd60e51b815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d6174636800000000000060448201526064015b60405180910390fd5b50505092915050565b436060828067ffffffffffffffff8111156104d2576104d2610d9b565b60405190808252806020026020018201604052801561050557816020015b60608152602001906001900390816104f05790505b5091503660005b8281101561061f57600087878381811061052857610528610db1565b905060200281019061053a9190610e3e565b92506105496020840184610d05565b6001600160a01b031661055f6020850185610de7565b60405161056d929190610e2e565b6000604051808303816000865af19150503d80600081146105aa576040519150601f19603f3d011682016040523d82523d6000602084013e6105af565b606091505b508684815181106105c2576105c2610db1565b60209081029190910101529050806106165760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60448201526064016104a3565b5060010161050c565b5050509250929050565b43804060606106398686866107c6565b905093509350939050565b6060818067ffffffffffffffff81111561066057610660610d9b565b6040519080825280602002602001820160405280156106a657816020015b60408051808201909152600081526060602082015281526020019060019003908161067e5790505b5091503660005b828110156104ac5760008482815181106106c9576106c9610db1565b602002602001015190508686838181106106e5576106e5610db1565b90506020028101906106f79190610e54565b92506107066020840184610d05565b6001600160a01b031661071c6040850185610de7565b60405161072a929190610e2e565b6000604051808303816000865af19150503d8060008114610767576040519150601f19603f3d011682016040523d82523d6000602084013e61076c565b606091505b5060208084019190915290151580835290840135176107bd5762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260646000fd5b506001016106ad565b6060818067ffffffffffffffff8111156107e2576107e2610d9b565b60405190808252806020026020018201604052801561082857816020015b6040805180820190915260008152606060208201528152602001906001900390816108005790505b5091503660005b8281101561094f57600084828151811061084b5761084b610db1565b6020026020010151905086868381811061086757610867610db1565b90506020028101906108799190610e3e565b92506108886020840184610d05565b6001600160a01b031661089e6020850185610de7565b6040516108ac929190610e2e565b6000604051808303816000865af19150503d80600081146108e9576040519150601f19603f3d011682016040523d82523d6000602084013e6108ee565b606091505b5060208301521515815287156109465780516109465760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60448201526064016104a3565b5060010161082f565b5050509392505050565b600080606061096a60018686610629565b919790965090945092505050565b60608160008167ffffffffffffffff81111561099657610996610d9b565b6040519080825280602002602001820160405280156109bf578160200160208202803683370190505b50905060005b82811015610a9057866001600160a01b03166370a082318787848181106109ee576109ee610db1565b9050602002016020810190610a039190610d05565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190610e6a565b828281518110610a7d57610a7d610db1565b60209081029190910101526001016109c5565b5095945050505050565b60008083601f840112610aac57600080fd5b50813567ffffffffffffffff811115610ac457600080fd5b6020830191508360208260051b8501011115610adf57600080fd5b9250929050565b60008060208385031215610af957600080fd5b823567ffffffffffffffff811115610b1057600080fd5b610b1c85828601610a9a565b90969095509350505050565b6000815180845260005b81811015610b4e57602081850181015186830182015201610b32565b81811115610b60576000602083870101525b50601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015610bd657858303601f1901895281518051151584528401516040858501819052610bc281860183610b28565b9a86019a9450505090830190600101610b92565b5090979650505050505050565b602081526000610bf66020830184610b75565b9392505050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b82811015610c5957605f19888703018452610c47868351610b28565b95509284019290840190600101610c2b565b509398975050505050505050565b600080600060408486031215610c7c57600080fd5b83358015158114610c8c57600080fd5b9250602084013567ffffffffffffffff811115610ca857600080fd5b610cb486828701610a9a565b9497909650939450505050565b838152826020820152606060408201526000610ce06060830184610b75565b95945050505050565b80356001600160a01b0381168114610d0057600080fd5b919050565b600060208284031215610d1757600080fd5b610bf682610ce9565b600080600060408486031215610d3557600080fd5b610c8c84610ce9565b6020808252825182820181905260009190848201906040850190845b81811015610d7657835183529284019291840191600101610d5a565b50909695505050505050565b600060208284031215610d9457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235607e19833603018112610ddd57600080fd5b9190910192915050565b6000808335601e19843603018112610dfe57600080fd5b83018035915067ffffffffffffffff821115610e1957600080fd5b602001915036819003821315610adf57600080fd5b8183823760009101908152919050565b60008235603e19833603018112610ddd57600080fd5b60008235605e19833603018112610ddd57600080fd5b600060208284031215610e7c57600080fd5b505191905056fea264697066735822122093eef2cfbc4622bc8be26749af0dd10cfe12218d3777be784c5a1acb4d221b3364736f6c634300080d0033",
    "sourceMap": "233:617:46:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fe5760003560e01c80634d2301cc11610095578063a8b0574e11610064578063a8b0574e1461023a578063bce38bd714610255578063c3077fa914610268578063d802178e1461027b578063ee82ac5e146102a857600080fd5b80634d2301cc146101d957806372425d9d1461020157806382ad56cb1461021457806386d516e81461022757600080fd5b80633408e470116100d15780633408e4701461017e578063399542e9146101915780633e64a696146101b357806342cbb15c146101c657600080fd5b80630f28c97d14610103578063174dea7114610125578063252dba421461014557806327e86d6e14610166575b600080fd5b34801561010f57600080fd5b50425b6040519081526020015b60405180910390f35b610138610133366004610ae6565b6102c7565b60405161011c9190610be3565b610158610153366004610ae6565b6104b5565b60405161011c929190610bfd565b34801561017257600080fd5b50436000190140610112565b34801561018a57600080fd5b5046610112565b6101a461019f366004610c67565b610629565b60405161011c93929190610cc1565b3480156101bf57600080fd5b5048610112565b3480156101d257600080fd5b5043610112565b3480156101e557600080fd5b506101126101f4366004610d05565b6001600160a01b03163190565b34801561020d57600080fd5b5044610112565b610138610222366004610ae6565b610644565b34801561023357600080fd5b5045610112565b34801561024657600080fd5b5060405141815260200161011c565b610138610263366004610c67565b6107c6565b6101a4610276366004610ae6565b610959565b34801561028757600080fd5b5061029b610296366004610d20565b610978565b60405161011c9190610d3e565b3480156102b457600080fd5b506101126102c3366004610d82565b4090565b60606000828067ffffffffffffffff8111156102e5576102e5610d9b565b60405190808252806020026020018201604052801561032b57816020015b6040805180820190915260008152606060208201528152602001906001900390816103035790505b5092503660005b8281101561045757600085828151811061034e5761034e610db1565b6020026020010151905087878381811061036a5761036a610db1565b905060200281019061037c9190610dc7565b6040810135958601959093506103956020850185610d05565b6001600160a01b0316816103ac6060870187610de7565b6040516103ba929190610e2e565b60006040518083038185875af1925050503d80600081146103f7576040519150601f19603f3d011682016040523d82523d6000602084013e6103fc565b606091505b50602080850191909152901515808452908501351761044d5762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260846000fd5b5050600101610332565b508234146104ac5760405162461bcd60e51b815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d6174636800000000000060448201526064015b60405180910390fd5b50505092915050565b436060828067ffffffffffffffff8111156104d2576104d2610d9b565b60405190808252806020026020018201604052801561050557816020015b60608152602001906001900390816104f05790505b5091503660005b8281101561061f57600087878381811061052857610528610db1565b905060200281019061053a9190610e3e565b92506105496020840184610d05565b6001600160a01b031661055f6020850185610de7565b60405161056d929190610e2e565b6000604051808303816000865af19150503d80600081146105aa576040519150601f19603f3d011682016040523d82523d6000602084013e6105af565b606091505b508684815181106105c2576105c2610db1565b60209081029190910101529050806106165760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60448201526064016104a3565b5060010161050c565b5050509250929050565b43804060606106398686866107c6565b905093509350939050565b6060818067ffffffffffffffff81111561066057610660610d9b565b6040519080825280602002602001820160405280156106a657816020015b60408051808201909152600081526060602082015281526020019060019003908161067e5790505b5091503660005b828110156104ac5760008482815181106106c9576106c9610db1565b602002602001015190508686838181106106e5576106e5610db1565b90506020028101906106f79190610e54565b92506107066020840184610d05565b6001600160a01b031661071c6040850185610de7565b60405161072a929190610e2e565b6000604051808303816000865af19150503d8060008114610767576040519150601f19603f3d011682016040523d82523d6000602084013e61076c565b606091505b5060208084019190915290151580835290840135176107bd5762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260646000fd5b506001016106ad565b6060818067ffffffffffffffff8111156107e2576107e2610d9b565b60405190808252806020026020018201604052801561082857816020015b6040805180820190915260008152606060208201528152602001906001900390816108005790505b5091503660005b8281101561094f57600084828151811061084b5761084b610db1565b6020026020010151905086868381811061086757610867610db1565b90506020028101906108799190610e3e565b92506108886020840184610d05565b6001600160a01b031661089e6020850185610de7565b6040516108ac929190610e2e565b6000604051808303816000865af19150503d80600081146108e9576040519150601f19603f3d011682016040523d82523d6000602084013e6108ee565b606091505b5060208301521515815287156109465780516109465760405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60448201526064016104a3565b5060010161082f565b5050509392505050565b600080606061096a60018686610629565b919790965090945092505050565b60608160008167ffffffffffffffff81111561099657610996610d9b565b6040519080825280602002602001820160405280156109bf578160200160208202803683370190505b50905060005b82811015610a9057866001600160a01b03166370a082318787848181106109ee576109ee610db1565b9050602002016020810190610a039190610d05565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190610e6a565b828281518110610a7d57610a7d610db1565b60209081029190910101526001016109c5565b5095945050505050565b60008083601f840112610aac57600080fd5b50813567ffffffffffffffff811115610ac457600080fd5b6020830191508360208260051b8501011115610adf57600080fd5b9250929050565b60008060208385031215610af957600080fd5b823567ffffffffffffffff811115610b1057600080fd5b610b1c85828601610a9a565b90969095509350505050565b6000815180845260005b81811015610b4e57602081850181015186830182015201610b32565b81811115610b60576000602083870101525b50601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015610bd657858303601f1901895281518051151584528401516040858501819052610bc281860183610b28565b9a86019a9450505090830190600101610b92565b5090979650505050505050565b602081526000610bf66020830184610b75565b9392505050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b82811015610c5957605f19888703018452610c47868351610b28565b95509284019290840190600101610c2b565b509398975050505050505050565b600080600060408486031215610c7c57600080fd5b83358015158114610c8c57600080fd5b9250602084013567ffffffffffffffff811115610ca857600080fd5b610cb486828701610a9a565b9497909650939450505050565b838152826020820152606060408201526000610ce06060830184610b75565b95945050505050565b80356001600160a01b0381168114610d0057600080fd5b919050565b600060208284031215610d1757600080fd5b610bf682610ce9565b600080600060408486031215610d3557600080fd5b610c8c84610ce9565b6020808252825182820181905260009190848201906040850190845b81811015610d7657835183529284019291840191600101610d5a565b50909695505050505050565b600060208284031215610d9457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235607e19833603018112610ddd57600080fd5b9190910192915050565b6000808335601e19843603018112610dfe57600080fd5b83018035915067ffffffffffffffff821115610e1957600080fd5b602001915036819003821315610adf57600080fd5b8183823760009101908152919050565b60008235603e19833603018112610ddd57600080fd5b60008235605e19833603018112610ddd57600080fd5b600060208284031215610e7c57600080fd5b505191905056fea264697066735822122093eef2cfbc4622bc8be26749af0dd10cfe12218d3777be784c5a1acb4d221b3364736f6c634300080d0033",
    "sourceMap": "233:617:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11079:120:45;;;;;;;;;;-1:-1:-1;11177:15:45;11079:120;;;160:25:57;;;148:2;133:18;11079:120:45;;;;;;;;8097:2018;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3347:563::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;11443:158::-;;;;;;;;;;-1:-1:-1;11567:12:45;-1:-1:-1;;11567:16:45;11557:27;11443:158;;11890:100;;;;;;;;;;-1:-1:-1;11970:13:45;11890:100;;5193:334;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;11747:100::-;;;;;;;;;;-1:-1:-1;11827:13:45;11747:100;;10412:111;;;;;;;;;;-1:-1:-1;10504:12:45;10412:111;;11266:114;;;;;;;;;;-1:-1:-1;11266:114:45;;;;;:::i;:::-;-1:-1:-1;;;;;11361:12:45;;;11266:114;10739:124;;;;;;;;;;-1:-1:-1;10840:16:45;10739:124;;6336:1523;;;;;;:::i;:::-;;:::i;10913:116::-;;;;;;;;;;-1:-1:-1;11008:14:45;10913:116;;10572;;;;;;;;;;-1:-1:-1;10572:116:45;;10667:14;6349:51:57;;6337:2;6322:18;10572:116:45;6203:203:57;4195:616:45;;;;;;:::i;:::-;;:::i;5909:245::-;;;;;;:::i;:::-;;:::i;429:419:46:-;;;;;;;;;;-1:-1:-1;429:419:46;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10231:134:45:-;;;;;;;;;;-1:-1:-1;10231:134:45;;;;;:::i;:::-;10336:22;;10231:134;8097:2018;8175:26;8213:22;8262:5;;8297:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;8297:20:45;;;;;;;;;;;;;;;;8284:33;;8327:25;8367:9;8362:1602;8386:6;8382:1;:10;8362:1602;;;8410:20;8433:10;8444:1;8433:13;;;;;;;;:::i;:::-;;;;;;;8410:36;;8468:5;;8474:1;8468:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8504:11;;;;8732:21;;;;8460:16;;-1:-1:-1;8819:12:45;;;;8460:16;8819:12;:::i;:::-;-1:-1:-1;;;;;8819:17:45;8844:3;8849:14;;;;:5;:14;:::i;:::-;8819:45;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8798:17:45;;;;8781:83;;;;;;;;;;9101:16;;;9088:30;9085:49;9075:806;;-1:-1:-1;;;9263:4:45;9256:80;9409:66;9403:4;9396:80;9561:66;9555:4;9548:80;-1:-1:-1;;;9751:4:45;9744:80;9858:4;9852;9845:18;9075:806;-1:-1:-1;;9936:3:45;;8362:1602;;;;10063:14;10050:9;:27;10042:66;;;;-1:-1:-1;;;10042:66:45;;9370:2:57;10042:66:45;;;9352:21:57;9409:2;9389:18;;;9382:30;9448:28;9428:18;;;9421:56;9494:18;;10042:66:45;;;;;;;;;8203:1912;;;8097:2018;;;;:::o;3347:563::-;3485:12;3434:25;3524:5;;3559:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3546:32;;3588:18;3621:9;3616:288;3640:6;3636:1;:10;3616:288;;;3664:12;3697:5;;3703:1;3697:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3690:15;-1:-1:-1;3746:11:45;;;;3690:15;3746:11;:::i;:::-;-1:-1:-1;;;;;3746:16:45;3763:13;;;;:4;:13;:::i;:::-;3746:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3729:10;3740:1;3729:13;;;;;;;;:::i;:::-;;;;;;;;;;3719:58;;-1:-1:-1;3719:58:45;3791:43;;;;-1:-1:-1;;;3791:43:45;;10052:2:57;3791:43:45;;;10034:21:57;10091:2;10071:18;;;10064:30;-1:-1:-1;;;10110:18:57;;;10103:53;10173:18;;3791:43:45;9850:347:57;3791:43:45;-1:-1:-1;3876:3:45;;3616:288;;;;3461:449;;3347:563;;;;;:::o;5193:334::-;5405:12;5439:23;;5353:26;5485:35;5498:14;5514:5;;5485:12;:35::i;:::-;5472:48;;5193:334;;;;;;;:::o;6336:1523::-;6404:26;6459:5;;6494:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;6494:20:45;;;;;;;;;;;;;;;;6481:33;;6524:20;6559:9;6554:1299;6578:6;6574:1;:10;6554:1299;;;6602:20;6625:10;6636:1;6625:13;;;;;;;;:::i;:::-;;;;;;;6602:36;;6660:5;;6666:1;6660:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6652:16;-1:-1:-1;6720:12:45;;;;6652:16;6720:12;:::i;:::-;-1:-1:-1;;;;;6720:17:45;6738:14;;;;:5;:14;:::i;:::-;6720:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6699:17:45;;;;6682:71;;;;;;;;;;6990:16;;;6977:30;6974:49;6964:806;;-1:-1:-1;;;7152:4:45;7145:80;7298:66;7292:4;7285:80;7450:66;7444:4;7437:80;-1:-1:-1;;;7640:4:45;7633:80;7747:4;7741;7734:18;6964:806;-1:-1:-1;7825:3:45;;6554:1299;;4195:616;4307:26;4362:5;;4397:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;4397:20:45;;;;;;;;;;;;;;;;4384:33;;4427:18;4460:9;4455:350;4479:6;4475:1;:10;4455:350;;;4503:20;4526:10;4537:1;4526:13;;;;;;;;:::i;:::-;;;;;;;4503:36;;4560:5;;4566:1;4560:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;4553:15;-1:-1:-1;4620:11:45;;;;4553:15;4620:11;:::i;:::-;-1:-1:-1;;;;;4620:16:45;4637:13;;;;:4;:13;:::i;:::-;4620:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4599:17:45;;;4582:69;;;;;4665:70;;;;4693:14;;4685:50;;;;-1:-1:-1;;;4685:50:45;;10052:2:57;4685:50:45;;;10034:21:57;10091:2;10071:18;;;10064:30;-1:-1:-1;;;10110:18:57;;;10103:53;10173:18;;4685:50:45;9850:347:57;4685:50:45;-1:-1:-1;4777:3:45;;4455:350;;;;4335:476;;4195:616;;;;;:::o;5909:245::-;5997:19;6018:17;6037:26;6114:33;6135:4;6141:5;;6114:20;:33::i;:::-;6075:72;;;;-1:-1:-1;6075:72:45;;-1:-1:-1;5909:245:45;-1:-1:-1;;;5909:245:45:o;429:419:46:-;520:16;565:8;548:14;565:8;618:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;618:21:46;;590:49;;654:9;649:168;673:6;669:1;:10;649:168;;;718:5;-1:-1:-1;;;;;711:23:46;;735:8;;744:1;735:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;711:36;;-1:-1:-1;;;;;;711:36:46;;;;;;;-1:-1:-1;;;;;6367:32:57;;;711:36:46;;;6349:51:57;6322:18;;711:36:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;697:8;706:1;697:11;;;;;;;;:::i;:::-;;;;;;;;;;:50;789:3;;649:168;;;-1:-1:-1;833:8:46;429:419;-1:-1:-1;;;;;429:419:46:o;196:386:57:-;278:8;288:6;342:3;335:4;327:6;323:17;319:27;309:55;;360:1;357;350:12;309:55;-1:-1:-1;383:20:57;;426:18;415:30;;412:50;;;458:1;455;448:12;412:50;495:4;487:6;483:17;471:29;;555:3;548:4;538:6;535:1;531:14;523:6;519:27;515:38;512:47;509:67;;;572:1;569;562:12;509:67;196:386;;;;;:::o;587:487::-;704:6;712;765:2;753:9;744:7;740:23;736:32;733:52;;;781:1;778;771:12;733:52;821:9;808:23;854:18;846:6;843:30;840:50;;;886:1;883;876:12;840:50;925:89;1006:7;997:6;986:9;982:22;925:89;:::i;:::-;1033:8;;899:115;;-1:-1:-1;587:487:57;-1:-1:-1;;;;587:487:57:o;1079:471::-;1120:3;1158:5;1152:12;1185:6;1180:3;1173:19;1210:1;1220:162;1234:6;1231:1;1228:13;1220:162;;;1296:4;1352:13;;;1348:22;;1342:29;1324:11;;;1320:20;;1313:59;1249:12;1220:162;;;1400:6;1397:1;1394:13;1391:87;;;1466:1;1459:4;1450:6;1445:3;1441:16;1437:27;1430:38;1391:87;-1:-1:-1;1532:2:57;1511:15;-1:-1:-1;;1507:29:57;1498:39;;;;1539:4;1494:50;;1079:471;-1:-1:-1;;1079:471:57:o;1555:810::-;1614:3;1645;1677:5;1671:12;1704:6;1699:3;1692:19;1730:4;1759:2;1754:3;1750:12;1743:19;;1815:2;1805:6;1802:1;1798:14;1791:5;1787:26;1783:35;1852:2;1845:5;1841:14;1873:1;1883:456;1897:6;1894:1;1891:13;1883:456;;;1962:16;;;-1:-1:-1;;1958:30:57;1946:43;;2012:13;;2092:9;;2085:17;2078:25;2065:39;;2143:11;;2137:18;2048:4;2175:13;;;2168:25;;;2214:45;2245:13;;;2137:18;2214:45;:::i;:::-;2317:12;;;;2206:53;-1:-1:-1;;;2282:15:57;;;;1919:1;1912:9;1883:456;;;-1:-1:-1;2355:4:57;;1555:810;-1:-1:-1;;;;;;;1555:810:57:o;2370:317::-;2599:2;2588:9;2581:21;2562:4;2619:62;2677:2;2666:9;2662:18;2654:6;2619:62;:::i;:::-;2611:70;2370:317;-1:-1:-1;;;2370:317:57:o;3178:871::-;3366:4;3414:2;3403:9;3399:18;3444:6;3433:9;3426:25;3470:2;3508;3503;3492:9;3488:18;3481:30;3531:6;3566;3560:13;3597:6;3589;3582:22;3635:2;3624:9;3620:18;3613:25;;3697:2;3687:6;3684:1;3680:14;3669:9;3665:30;3661:39;3647:53;;3735:2;3727:6;3723:15;3756:1;3766:254;3780:6;3777:1;3774:13;3766:254;;;3873:2;3869:7;3857:9;3849:6;3845:22;3841:36;3836:3;3829:49;3901:39;3933:6;3924;3918:13;3901:39;:::i;:::-;3891:49;-1:-1:-1;3998:12:57;;;;3963:15;;;;3802:1;3795:9;3766:254;;;-1:-1:-1;4037:6:57;;3178:871;-1:-1:-1;;;;;;;;3178:871:57:o;4236:642::-;4353:6;4361;4369;4422:2;4410:9;4401:7;4397:23;4393:32;4390:52;;;4438:1;4435;4428:12;4390:52;4477:9;4464:23;4530:5;4523:13;4516:21;4509:5;4506:32;4496:60;;4552:1;4549;4542:12;4496:60;4575:5;-1:-1:-1;4631:2:57;4616:18;;4603:32;4658:18;4647:30;;4644:50;;;4690:1;4687;4680:12;4644:50;4729:89;4810:7;4801:6;4790:9;4786:22;4729:89;:::i;:::-;4236:642;;4837:8;;-1:-1:-1;4703:115:57;;-1:-1:-1;;;;4236:642:57:o;4883:459::-;5168:6;5157:9;5150:25;5211:6;5206:2;5195:9;5191:18;5184:34;5254:2;5249;5238:9;5234:18;5227:30;5131:4;5274:62;5332:2;5321:9;5317:18;5309:6;5274:62;:::i;:::-;5266:70;4883:459;-1:-1:-1;;;;;4883:459:57:o;5347:173::-;5415:20;;-1:-1:-1;;;;;5464:31:57;;5454:42;;5444:70;;5510:1;5507;5500:12;5444:70;5347:173;;;:::o;5525:186::-;5584:6;5637:2;5625:9;5616:7;5612:23;5608:32;5605:52;;;5653:1;5650;5643:12;5605:52;5676:29;5695:9;5676:29;:::i;6411:530::-;6506:6;6514;6522;6575:2;6563:9;6554:7;6550:23;6546:32;6543:52;;;6591:1;6588;6581:12;6543:52;6614:29;6633:9;6614:29;:::i;6946:632::-;7117:2;7169:21;;;7239:13;;7142:18;;;7261:22;;;7088:4;;7117:2;7340:15;;;;7314:2;7299:18;;;7088:4;7383:169;7397:6;7394:1;7391:13;7383:169;;;7458:13;;7446:26;;7527:15;;;;7492:12;;;;7419:1;7412:9;7383:169;;;-1:-1:-1;7569:3:57;;6946:632;-1:-1:-1;;;;;;6946:632:57:o;7583:180::-;7642:6;7695:2;7683:9;7674:7;7670:23;7666:32;7663:52;;;7711:1;7708;7701:12;7663:52;-1:-1:-1;7734:23:57;;7583:180;-1:-1:-1;7583:180:57:o;7768:127::-;7829:10;7824:3;7820:20;7817:1;7810:31;7860:4;7857:1;7850:15;7884:4;7881:1;7874:15;7900:127;7961:10;7956:3;7952:20;7949:1;7942:31;7992:4;7989:1;7982:15;8016:4;8013:1;8006:15;8032:329;8129:4;8187:11;8174:25;8281:3;8277:8;8266;8250:14;8246:29;8242:44;8222:18;8218:69;8208:97;;8301:1;8298;8291:12;8208:97;8322:33;;;;;8032:329;-1:-1:-1;;8032:329:57:o;8366:521::-;8443:4;8449:6;8509:11;8496:25;8603:2;8599:7;8588:8;8572:14;8568:29;8564:43;8544:18;8540:68;8530:96;;8622:1;8619;8612:12;8530:96;8649:33;;8701:20;;;-1:-1:-1;8744:18:57;8733:30;;8730:50;;;8776:1;8773;8766:12;8730:50;8809:4;8797:17;;-1:-1:-1;8840:14:57;8836:27;;;8826:38;;8823:58;;;8877:1;8874;8867:12;8892:271;9075:6;9067;9062:3;9049:33;9031:3;9101:16;;9126:13;;;9101:16;8892:271;-1:-1:-1;8892:271:57:o;9523:322::-;9614:4;9672:11;9659:25;9766:2;9762:7;9751:8;9735:14;9731:29;9727:43;9707:18;9703:68;9693:96;;9785:1;9782;9775:12;10202:323;10294:4;10352:11;10339:25;10446:2;10442:7;10431:8;10415:14;10411:29;10407:43;10387:18;10383:68;10373:96;;10465:1;10462;10455:12;10530:184;10600:6;10653:2;10641:9;10632:7;10628:23;10624:32;10621:52;;;10669:1;10666;10659:12;10621:52;-1:-1:-1;10692:16:57;;10530:184;-1:-1:-1;10530:184:57:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "aggregate((address,bytes)[])": "252dba42",
    "aggregate3((address,bool,bytes)[])": "82ad56cb",
    "aggregate3Value((address,bool,uint256,bytes)[])": "174dea71",
    "blockAndAggregate((address,bytes)[])": "c3077fa9",
    "getBasefee()": "3e64a696",
    "getBlockHash(uint256)": "ee82ac5e",
    "getBlockNumber()": "42cbb15c",
    "getChainId()": "3408e470",
    "getCurrentBlockCoinbase()": "a8b0574e",
    "getCurrentBlockDifficulty()": "72425d9d",
    "getCurrentBlockGasLimit()": "86d516e8",
    "getCurrentBlockTimestamp()": "0f28c97d",
    "getEthBalance(address)": "4d2301cc",
    "getLastBlockHash()": "27e86d6e",
    "getTokenBalances(address,address[])": "d802178e",
    "tryAggregate(bool,(address,bytes)[])": "bce38bd7",
    "tryBlockAndAggregate(bool,(address,bytes)[])": "399542e9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3Value[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3Value\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basefee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"getTokenBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Updated version of Multicall that supports ERC20 balanceOf\",\"kind\":\"dev\",\"methods\":{\"aggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of bytes containing the responses\"}},\"aggregate3((address,bool,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3 structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3Value structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"blockAndAggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}},\"getBlockHash(uint256)\":{\"params\":{\"blockNumber\":\"The block number\"}},\"getTokenBalances(address,address[])\":{\"params\":{\"accounts\":\"The addresses to query\",\"token\":\"The ERC20 token address\"}},\"tryAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\",\"requireSuccess\":\"If true, require all calls to succeed\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}}},\"title\":\"Multicall4\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible call aggregation with Multicall\"},\"aggregate3((address,bool,bytes)[])\":{\"notice\":\"Aggregate calls, ensuring each returns success if required\"},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"notice\":\"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values\"},\"blockAndAggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"},\"getBasefee()\":{\"notice\":\"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain\"},\"getBlockHash(uint256)\":{\"notice\":\"Returns the block hash for the given block number\"},\"getBlockNumber()\":{\"notice\":\"Returns the block number\"},\"getChainId()\":{\"notice\":\"Returns the chain id\"},\"getCurrentBlockCoinbase()\":{\"notice\":\"Returns the block coinbase\"},\"getCurrentBlockDifficulty()\":{\"notice\":\"Returns the block difficulty\"},\"getCurrentBlockGasLimit()\":{\"notice\":\"Returns the block gas limit\"},\"getCurrentBlockTimestamp()\":{\"notice\":\"Returns the block timestamp\"},\"getEthBalance(address)\":{\"notice\":\"Returns the (ETH) balance of a given address\"},\"getLastBlockHash()\":{\"notice\":\"Returns the block hash of the last block\"},\"getTokenBalances(address,address[])\":{\"notice\":\"Returns the ERC20 token balance of each account\"},\"tryAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls without requiring success\"},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/Multicall4.sol\":\"Multicall4\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"src/utils/Multicall3.sol\":{\"keccak256\":\"0x3b7e58672a49500c92ba5a63ef2881446c3bee5dc9e1db3e4562318960d82aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fe57b9bb337a7dd082f33464d48c342d9960f2dc4e4817aadff175a64396e9d\",\"dweb:/ipfs/Qma5p4A5n2oAPMD2KNjB7YLWTVbLVU2URduU3HjtUnb7X4\"]},\"src/utils/Multicall4.sol\":{\"keccak256\":\"0xdb8cd752dd8295f8f594a62c6206f6d772dd389eac68df87a044aa452c3083c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ae55686bc8d046aab8c722bfc07e02a8c176d1e63f5ca26f833453d7952d8d9\",\"dweb:/ipfs/QmZ7x91YyBunAS2aKjeKTp8MsND9AFbRuMSRxts6VuYiTb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "aggregate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "bytes[]",
              "name": "returnData",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Multicall3.Call3[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "aggregate3",
          "outputs": [
            {
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Multicall3.Call3Value[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowFailure",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "aggregate3Value",
          "outputs": [
            {
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "blockAndAggregate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBasefee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "basefee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBlockHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBlockNumber",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "chainid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentBlockCoinbase",
          "outputs": [
            {
              "internalType": "address",
              "name": "coinbase",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentBlockDifficulty",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "difficulty",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentBlockGasLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "gaslimit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentBlockTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEthBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastBlockHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenBalances",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "requireSuccess",
              "type": "bool"
            },
            {
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "tryAggregate",
          "outputs": [
            {
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "requireSuccess",
              "type": "bool"
            },
            {
              "internalType": "struct Multicall3.Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "tryBlockAndAggregate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "struct Multicall3.Result[]",
              "name": "returnData",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "aggregate((address,bytes)[])": {
            "params": {
              "calls": "An array of Call structs"
            },
            "returns": {
              "blockNumber": "The block number where the calls were executed",
              "returnData": "An array of bytes containing the responses"
            }
          },
          "aggregate3((address,bool,bytes)[])": {
            "params": {
              "calls": "An array of Call3 structs"
            },
            "returns": {
              "returnData": "An array of Result structs"
            }
          },
          "aggregate3Value((address,bool,uint256,bytes)[])": {
            "params": {
              "calls": "An array of Call3Value structs"
            },
            "returns": {
              "returnData": "An array of Result structs"
            }
          },
          "blockAndAggregate((address,bytes)[])": {
            "params": {
              "calls": "An array of Call structs"
            },
            "returns": {
              "blockHash": "The hash of the block where the calls were executed",
              "blockNumber": "The block number where the calls were executed",
              "returnData": "An array of Result structs"
            }
          },
          "getBlockHash(uint256)": {
            "params": {
              "blockNumber": "The block number"
            }
          },
          "getTokenBalances(address,address[])": {
            "params": {
              "accounts": "The addresses to query",
              "token": "The ERC20 token address"
            }
          },
          "tryAggregate(bool,(address,bytes)[])": {
            "params": {
              "calls": "An array of Call structs",
              "requireSuccess": "If true, require all calls to succeed"
            },
            "returns": {
              "returnData": "An array of Result structs"
            }
          },
          "tryBlockAndAggregate(bool,(address,bytes)[])": {
            "params": {
              "calls": "An array of Call structs"
            },
            "returns": {
              "blockHash": "The hash of the block where the calls were executed",
              "blockNumber": "The block number where the calls were executed",
              "returnData": "An array of Result structs"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "aggregate((address,bytes)[])": {
            "notice": "Backwards-compatible call aggregation with Multicall"
          },
          "aggregate3((address,bool,bytes)[])": {
            "notice": "Aggregate calls, ensuring each returns success if required"
          },
          "aggregate3Value((address,bool,uint256,bytes)[])": {
            "notice": "Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values"
          },
          "blockAndAggregate((address,bytes)[])": {
            "notice": "Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"
          },
          "getBasefee()": {
            "notice": "Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain"
          },
          "getBlockHash(uint256)": {
            "notice": "Returns the block hash for the given block number"
          },
          "getBlockNumber()": {
            "notice": "Returns the block number"
          },
          "getChainId()": {
            "notice": "Returns the chain id"
          },
          "getCurrentBlockCoinbase()": {
            "notice": "Returns the block coinbase"
          },
          "getCurrentBlockDifficulty()": {
            "notice": "Returns the block difficulty"
          },
          "getCurrentBlockGasLimit()": {
            "notice": "Returns the block gas limit"
          },
          "getCurrentBlockTimestamp()": {
            "notice": "Returns the block timestamp"
          },
          "getEthBalance(address)": {
            "notice": "Returns the (ETH) balance of a given address"
          },
          "getLastBlockHash()": {
            "notice": "Returns the block hash of the last block"
          },
          "getTokenBalances(address,address[])": {
            "notice": "Returns the ERC20 token balance of each account"
          },
          "tryAggregate(bool,(address,bytes)[])": {
            "notice": "Backwards-compatible with Multicall2Aggregate calls without requiring success"
          },
          "tryBlockAndAggregate(bool,(address,bytes)[])": {
            "notice": "Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/utils/Multicall4.sol": "Multicall4"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "src/utils/Multicall3.sol": {
        "keccak256": "0x3b7e58672a49500c92ba5a63ef2881446c3bee5dc9e1db3e4562318960d82aca",
        "urls": [
          "bzz-raw://8fe57b9bb337a7dd082f33464d48c342d9960f2dc4e4817aadff175a64396e9d",
          "dweb:/ipfs/Qma5p4A5n2oAPMD2KNjB7YLWTVbLVU2URduU3HjtUnb7X4"
        ],
        "license": "MIT"
      },
      "src/utils/Multicall4.sol": {
        "keccak256": "0xdb8cd752dd8295f8f594a62c6206f6d772dd389eac68df87a044aa452c3083c0",
        "urls": [
          "bzz-raw://3ae55686bc8d046aab8c722bfc07e02a8c176d1e63f5ca26f833453d7952d8d9",
          "dweb:/ipfs/QmZ7x91YyBunAS2aKjeKTp8MsND9AFbRuMSRxts6VuYiTb"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/utils/Multicall4.sol",
    "id": 31342,
    "exportedSymbols": {
      "IERC20": [
        27389
      ],
      "Multicall3": [
        31276
      ],
      "Multicall4": [
        31341
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:819:46",
    "nodes": [
      {
        "id": 31278,
        "nodeType": "PragmaDirective",
        "src": "32:23:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 31279,
        "nodeType": "ImportDirective",
        "src": "57:56:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31342,
        "sourceUnit": 27390,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31280,
        "nodeType": "ImportDirective",
        "src": "115:26:46",
        "nodes": [],
        "absolutePath": "src/utils/Multicall3.sol",
        "file": "./Multicall3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31342,
        "sourceUnit": 31277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31341,
        "nodeType": "ContractDefinition",
        "src": "233:617:46",
        "nodes": [
          {
            "id": 31340,
            "nodeType": "FunctionDefinition",
            "src": "429:419:46",
            "nodes": [],
            "body": {
              "id": 31339,
              "nodeType": "Block",
              "src": "538:310:46",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31296,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "556:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 31339,
                      "src": "548:14:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "548:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31299,
                  "initialValue": {
                    "expression": {
                      "id": 31297,
                      "name": "accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31289,
                      "src": "565:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 31298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "565:15:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "548:32:46"
                },
                {
                  "assignments": [
                    31304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31304,
                      "mutability": "mutable",
                      "name": "balances",
                      "nameLocation": "607:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 31339,
                      "src": "590:25:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "590:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31303,
                        "nodeType": "ArrayTypeName",
                        "src": "590:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31310,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31308,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31296,
                        "src": "632:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "618:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "622:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31306,
                        "nodeType": "ArrayTypeName",
                        "src": "622:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 31309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "618:21:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "590:49:46"
                },
                {
                  "body": {
                    "id": 31335,
                    "nodeType": "Block",
                    "src": "683:134:46",
                    "statements": [
                      {
                        "expression": {
                          "id": 31329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 31318,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31304,
                              "src": "697:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 31320,
                            "indexExpression": {
                              "id": 31319,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31312,
                              "src": "706:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "697:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 31325,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31289,
                                  "src": "735:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 31327,
                                "indexExpression": {
                                  "id": 31326,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31312,
                                  "src": "744:1:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "735:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 31322,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31286,
                                    "src": "718:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 31321,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27389,
                                  "src": "711:6:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$27389_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 31323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "711:13:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$27389",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 31324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27346,
                              "src": "711:23:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 31328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "711:36:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "697:50:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31330,
                        "nodeType": "ExpressionStatement",
                        "src": "697:50:46"
                      },
                      {
                        "id": 31334,
                        "nodeType": "UncheckedBlock",
                        "src": "761:46:46",
                        "statements": [
                          {
                            "expression": {
                              "id": 31332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "789:3:46",
                              "subExpression": {
                                "id": 31331,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31312,
                                "src": "791:1:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 31333,
                            "nodeType": "ExpressionStatement",
                            "src": "789:3:46"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31315,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31312,
                      "src": "669:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 31316,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31296,
                      "src": "673:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "669:10:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31336,
                  "initializationExpression": {
                    "assignments": [
                      31312
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 31312,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "662:1:46",
                        "nodeType": "VariableDeclaration",
                        "scope": 31336,
                        "src": "654:9:46",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31311,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 31314,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 31313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "666:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "654:13:46"
                  },
                  "nodeType": "ForStatement",
                  "src": "649:168:46"
                },
                {
                  "expression": {
                    "id": 31337,
                    "name": "balances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31304,
                    "src": "833:8:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 31294,
                  "id": 31338,
                  "nodeType": "Return",
                  "src": "826:15:46"
                }
              ]
            },
            "documentation": {
              "id": 31284,
              "nodeType": "StructuredDocumentation",
              "src": "273:151:46",
              "text": "@notice Returns the ERC20 token balance of each account\n @param token The ERC20 token address\n @param accounts The addresses to query"
            },
            "functionSelector": "d802178e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenBalances",
            "nameLocation": "438:16:46",
            "parameters": {
              "id": 31290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31286,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "463:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 31340,
                  "src": "455:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31289,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "489:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 31340,
                  "src": "470:27:46",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31287,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "470:7:46",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 31288,
                    "nodeType": "ArrayTypeName",
                    "src": "470:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:44:46"
            },
            "returnParameters": {
              "id": 31294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31340,
                  "src": "520:16:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31291,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "520:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31292,
                    "nodeType": "ArrayTypeName",
                    "src": "520:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "519:18:46"
            },
            "scope": 31341,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31282,
              "name": "Multicall3",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31276,
              "src": "256:10:46"
            },
            "id": 31283,
            "nodeType": "InheritanceSpecifier",
            "src": "256:10:46"
          }
        ],
        "canonicalName": "Multicall4",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 31281,
          "nodeType": "StructuredDocumentation",
          "src": "143:90:46",
          "text": "@title Multicall4\n @dev Updated version of Multicall that supports ERC20 balanceOf"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31341,
          31276
        ],
        "name": "Multicall4",
        "nameLocation": "242:10:46",
        "scope": 31342,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 46
}