# Docker Compose file for deploying a Hyperledger Besu network
version: "3.6"

# Definition for all services using Besu image
x-besu-def: &besu-def # Restart the container if it fails
  restart: "on-failure"
  # Use the latest version of Hyperledger Besu image
  image: hyperledger/besu:${BESU_IMAGE_VERSION:-latest}
  # Load environment variables from the .env file
  env_file:
    - ./.env
  environment:
    - BESU_ENV=${BESU_ENV:? "BESU_ENV is not set"}
  # Specify the entrypoint command
  entrypoint:
    - /bin/bash
    - -c
    - |
      # Log Besu version and help
      echo "Starting Besu node... BESU_ENV=${BESU_ENV}"
      echo "Besu version::>>" && besu --version
      besu validate-config --config-file=/config/config.toml
      # Start Besu node with specified options
      besu \
      --config-file=/config/config.toml \
      --p2p-host=$$(hostname -i) \
      --rpc-http-api=EEA,WEB3,ETH,NET,TRACE,DEBUG,ADMIN,TXPOOL,PERM \
      ${BESU_OPTS}
# List of services
services:
  # First validator node
  validator1:
    # Use the definition defined above
    <<: *besu-def
    # Map container ports to host ports
    ports:
      - 21001:8545/tcp
      - 30303
      - 9545
    # Labels for the service
    labels:
      - "consensus=besu"
    # Map host directories to container directories
    volumes:
      - ./config/besu/${BESU_ENV}:/config
      - ./config/keys/${BESU_ENV}/validator1:/opt/besu/keys
      - ./database/besu/${BESU_ENV}/validator1/:/opt/besu/database
    # Connect to the specified network
    networks:
      besu-network:
        ipv4_address: 172.16.239.11

  # Second validator node
  validator2:
    # Use the definition defined above
    <<: *besu-def
    # Map container ports to host ports
    ports:
      - 21002:8545/tcp
      - 30303
      - 9545
    # Labels for the service
    labels:
      - "consensus=besu"
    # Map host directories to container directories
    volumes:
      - ./config/besu/${BESU_ENV}:/config
      - ./config/keys/${BESU_ENV}/validator2:/opt/besu/keys
      - ./database/besu/${BESU_ENV}/validator2:/opt/besu/database
    depends_on:
      - validator1
    networks:
      besu-network:
        ipv4_address: 172.16.239.12

  validator3:
    <<: *besu-def
    ports:
      - 21003:8545/tcp
      - 30303
    labels:
      - "consensus=besu"
    volumes:
      - ./config/besu/${BESU_ENV}:/config
      - ./config/keys/${BESU_ENV}/validator3:/opt/besu/keys
      - ./database/besu/${BESU_ENV}/validator3/:/opt/besu/database
    depends_on:
      - validator1
    networks:
      besu-network:
        ipv4_address: 172.16.239.13

  rpcnode:
    <<: *besu-def
    volumes:
      - ./config/besu/${BESU_ENV}:/config
      - ./config/keys/${BESU_ENV}/rpcnode:/opt/besu/keys
      - ./database/besu/${BESU_ENV}/rpcnode:/opt/besu/database
    depends_on:
      - validator1
    ports:
      - 8545:8545/tcp
      - 8546:8546/tcp
    networks:
      besu-network:
        ipv4_address: 172.16.239.15

  prometheus:
    image: "prom/prometheus"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090/tcp
    networks:
      besu-network:
        ipv4_address: 172.16.239.32

  grafana:
    image: "grafana/grafana"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_VIEWERS_CAN_EDIT=true
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
      - grafana:/var/lib/grafana
    ports:
      - 3000:3000/tcp
    networks:
      besu-network:
        ipv4_address: 172.16.239.33

volumes:
  prometheus:
  grafana:

networks:
  besu-network:
    name: besu-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.239.0/24
